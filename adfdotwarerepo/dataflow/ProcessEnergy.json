{
	"name": "ProcessEnergy",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "RawEnergyLogs"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FlattenResults"
				}
			],
			"script": "source(output(\n\t\tMarketId as string,\n\t\tUserFilter as (Filter as (Postcode as string, CustomerType as string, CurrentSupplierId as string, IsTarifTypeFix as boolean, IsTarifTypeVariable as boolean, EnergySourceType as string, ContractDuration as string[], Suppliers as string[], SelectedSuppliers as string, UseElectricity as boolean, MeterType as string, ElectricityConnectionTypeId as string, ElectricityConsumptionStandard as string, ElectricityConsumptionPeak as string, ElectricityConsumptionOffPeak as string, UseSolarPanels as boolean, SolarPanelConsumptionStandard as string, SolarPanelConsumptionPeak as string, SolarPanelConsumptionOffPeak as string, UseGas as boolean, GasConsumption as string, ModelContractYearlyCost as double, OrderBy as string, ShowTop10 as boolean), ResultsFiltered as (ClientIndexInResultList as string, PurchaseId as string, ElectricityProductId as string, GasProductId as string, SupplierId as string, SupplierName as string, CanBuy as boolean, IsCollapsed as boolean, SelectedForCompare as boolean, ClientEvaluation as double, YearlyCost as double, TotalDiscount as string, Saving as double)[], ResultsAll as (ClientIndexInResultList as string, PurchaseId as string, ElectricityProductId as string, GasProductId as string, SupplierId as string, SupplierName as string, CanBuy as boolean, IsCollapsed as boolean, SelectedForCompare as boolean, ClientEvaluation as double, YearlyCost as double, TotalDiscount as string, Saving as double)[], ResultsRaw as (ClientIndexInResultList as string, PurchaseId as string, ElectricityProductId as string, GasProductId as string, SupplierId as string, SupplierName as string, CanBuy as boolean, IsCollapsed as boolean, SelectedForCompare as boolean, ClientEvaluation as double, YearlyCost as double, TotalDiscount as string, Saving as double)[]),\n\t\tResults as string,\n\t\tTrackingGuidJs as string,\n\t\tip as string,\n\t\twebsiteid as string,\n\t\tpartnerid as string,\n\t\tsessionid as string,\n\t\turl as string,\n\t\tactioncode as string,\n\t\tfilterid as string,\n\t\twebserver as string,\n\t\tcontractclassificationid as string,\n\t\tazureblobstorageurl as string,\n\t\tazureblobstoragesas as string,\n\t\tazuretablestorageurl as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> RawEnergyLogs\nRawEnergyLogs foldDown(unroll(UserFilter.ResultsAll),\n\tmapColumn(\n\t\tMarketId,\n\t\tResults,\n\t\tTrackingGuidJs,\n\t\tip,\n\t\twebsiteid,\n\t\tpartnerid,\n\t\tsessionid,\n\t\turl,\n\t\tactioncode,\n\t\tfilterid,\n\t\twebserver,\n\t\tcontractclassificationid,\n\t\tazureblobstorageurl,\n\t\tazureblobstoragesas,\n\t\tazuretablestorageurl,\n\t\tsupplierid = UserFilter.ResultsAll.SupplierId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenResults"
		}
	}
}